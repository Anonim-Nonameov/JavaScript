// ДЛЯ К.В (копировать-вставить)
// Скобки для выделения цитат, обрывков текста: «» « »

// Условия

// Итак, вот мы и подобрались к 5 уроку, в котором будем говорить об условиях.
// Но для начала, я хотел бы чтобы вы, читатель, задали себе один важный вопрос:
// как часто вы что-то выбираете в течении дня? выпить чай или выпить кофе?
// посмотреть фильм или почитать книгу? и так далее.
// В течении дня мы принимаем множество решений, и в зависимости от нашего выбора
// у нас происходят различные ситуации. Или, некоторые ситуации "диктуют" нам
// это поведение. Например - мы стоим на улице, у перекрестка, и видим светофор.
// На нём в данный момент горит красный цвет, и у нас в голове воспроизводится
// такое условие: «пока горит красный цвет, мы никуда не идем и не будем идти!
// Мы останавливаемся и не идем на красный цвет, так как мы боимся что нас
// собьет машина. В этот момент наше условие дополняется: «как только загорается
// зеленый цвет, мы переходим дорогу!»
// Так и в программах! при нажатии на красную кнопку, то программа ведет себя
// определенным образом (запускает ядерную ракету?..). Если же мы нажали
// на зеленую кнопку, то происходит абсолютно другое действие.
// То, как работает программа, зависит от множества условий. И, соответственно,
// условие - это тот самый следующий принцип, который мы и рассмотрим.

// Теперь давайте рассмотрим ситуацию с условием, с позиции кода.
// В первую очередь нам необходима какая нибудь информация, которую
// мы будем проверять. Например, переменная age со значением 14:

let age = 14;

// И теперь я хотел бы проверить, что если вдруг этот возраст, эта переменная
// age больше чем 18 - то я буду выполнять одни действия, если нет - то другие.
// Для того чтобы создать такую условную конструкцию, мы используем ключ.
// слово if (if с англ. языка значит "если" - всё логично!), после него ставим
// круглые скобки, и внутри мы должны написать то условие, которое мы будем
// проверять. После круглых скобок ставим фигурные скобки, и здесь записываем
// те действия, если заданное условие пройдет.
// Пример кода:

/*

if (;) {
	...
}

*/

// Представим, что у нас есть такое условие: «age больше 18», и что у нас
// есть код, который выводит диалог. окно с надписью "Вы можете войти".
// Что со всем этим делать не трудно догадаться. Пишем условие внутри
// круглых скобок, а код с выводом диалог. окна внутри фигурных скобок:

// if (age > 18) {
// 	alert("Вы можете войти");
// }

// Заходим в браузер, а там... ничего нет.
// Почему так? - всё потому что наше условие НЕ ПРОШЛО. 14 не может быть
// больше 18. Но если мы изменим 14 на 24, всё получится!
// Для начала изменим значение переменной age:

// age = 24;

// А затем повторяем наш код (после того как мы изменили значение переменной):

// if (age > 18) {
// 	alert("Вы можете войти");
// }

// Повторно заходим в браузер и... всё получилось, диалоговое окно выведено.
// Но это еще не всё! Допустим, что наш код с условием НЕ выполнились, т.е
// код не прошел по условию. В таком случае, мы можем ПРОДОЛЖИТЬ выполнение
// кода, или же по другому - "дополнить". Для этого мы используем ключ. слово
// else (else на англ. переводится как "еще", но в случае с JS - как "иначе".),
// которое ставится после закрывающей фиг. скобки. После этого "else" ставятся
// такие же фигурные скобки, а внутри них код, который выполнится если код выше
// не прошел по условию. Например, если у пользователя age равен 17,
// то по условию он не проходит. В таком случае срабатывает код, находящийся
// внутри else, и всё работает как надо!
// Однако, есть одна важная деталь - мы внутри else должны вписывать такой код,
// который является полной противоположностью кода в if (логично, ведь
// слово else переводится как "иначе").
// P.S - else работает ИСКЛЮЧИТЕЛЬНО с if!!!

// Опробуем наш "else" - если по условию юзер не прошел, то выведется диалог. окно
// с надписью "Рановато еще!". -

// Делаем значение age равным 14-ти, таким образом по условию он не пройдет:
// age = 14

// А теперь пишем весь код с if (;) {...} else {...}:

// if (age > 18) {
// 	alert("Вы можете войти");
// } else {
// 	alert("Рановато еще!");
// }

// Заходим в браузер и видим, что нам вывелось два сообщения. Первое - "вы можете
// войти", это с нашего прошлого кода c if (где мы еще не использовали else).
// Нас интересует именно второе, где нам вывело "Рановато еще" - это именно те
// слова, которые мы должны были увидеть! это результат выполнения кода в кон-
// -струкции else. Кстати, мы можем "скомбинировать" полученные нами знания и не
// задавать переменной age значение так "жёстко", а вместо этого "спросить" юзера
// о его возрасте - значением age будет ответ пользователя! а после того, как в
// переменную попадет значение, произойдет проверка условия - если возраст юзера
// меньшее 18-ти, ему выдаст сообщение с надписью "Рановато еще!", а если юзеру
// больше 18-ти, то ему выдаст сообщение с надписью "Вы можете войти".
// P.S - коды выше я закомментирую, так как они будут мешать (постоянно придётся
// нажимать на "ок").

age = prompt("Сколько вам лет?", '');

if (age > 18) {
	alert("Вы можете войти");
} else {
	alert("Рановато еще!");
}

// Заходим в браузер - нам выдаёт вопрос, мы на него и отвечаем и затем видим
// след. сообщение, где нам выдаст либо "Вы можете войти", либо "Рановато еще!".
// Главное, чтобы значение age было БОЛЬШЕ 18-ти, т.е если мы впишем 18 - нас "не
// пропустит". А если же мы напишем 19, и больше - пустит! :)
// Кстати, попробуйте как нибудь ввести "18.1" и посмотрите, интересный результат!

// Это всё хорошо, мы научиились создавать такие условные конструкции и продолжать
// их выполнение даже в том случае, если условие не будет оправдываться.
// Но это же еще не всё! мы можем еще и "расширять" такие условия, выстроить
// целую цепочку таких условий. Что я имею ввиду? ну, допустим, у нас есть
// какое-то одно условие. Мы его проверили, и если оно не прошло, мы хотим
// проверить следующее условие. Если и оно не прошло - проверяем еще одно, другое.
// Как это сделать? для этого, после блока if устроим небольшой отступ, ибо после
// блока else ничего выполняться не будет (else это конец выполнения условия,
// которое срабатывает в самом конце, если все условия не прошли), а затем
// пишем: else if (;) {...}. Выглядит это странно, ибо мы поставили после "else"
// слово if, но если эти два слова перевести, получится "или если", ну или "или
// же если". Вот как всё это будет выглядеть в коде:

/*

if (;) {
	...
} else if (;) {
	...
} else (;) {
	...
}

*/

// При этом, подобных "else if" может быть огромное количество - да хоть 100!
// В общем - штука очень полезная, значит будем применять.

// Но применять мы эту штуку сегодня не будем! применим её позже. :)